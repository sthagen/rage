# Copyright 2020 Jack Grigg
#
# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
# option. This file may not be copied, modified, or distributed
# except according to those terms.

### Localization for strings in the rage CLI tools

-age = age
-age-plugin- = age-plugin-
-rage = rage

## CLI flags

-flag-armor = -a/--armor
-flag-decrypt = -d/--decrypt
-flag-encrypt = -e/--encrypt
-flag-identity = -i/--identity
-flag-output = -o/--output
-flag-recipient = -r/--recipient
-flag-recipients-file = -R/--recipients-file
-flag-passphrase = -p/--passphrase
-flag-plugin-name = -j
-flag-max-work-factor = --max-work-factor
-flag-unstable = --features unstable

## Usage

usage-header = Usage

recipient = RECIPIENT
recipients-file = PATH
identity = IDENTITY
plugin-name = PLUGIN-NAME
input = INPUT
output = OUTPUT

args-header = Arguments

help-arg-input = Path to a file to read from.

flags-header = Options

help-flag-help = Print this help message and exit.
help-flag-version = Print version info and exit.
help-flag-encrypt = Encrypt the input (the default).
help-flag-decrypt = Decrypt the input.
help-flag-passphrase = Encrypt with a passphrase instead of recipients.
help-flag-max-work-factor = Maximum work factor to allow for passphrase decryption.
help-flag-armor = Encrypt to a PEM encoded format.
help-flag-recipient = Encrypt to the specified {recipient}. May be repeated.
help-flag-recipients-file = Encrypt to the recipients listed at {recipients-file}. May be repeated.
help-flag-identity = Use the identity file at {identity}. May be repeated.
help-flag-plugin-name = Use {-age-plugin-}{plugin-name} in its default mode as an identity.
help-flag-output = Write the result to the file at path {output}.

rage-after-help-content =
    {input} defaults to standard input, and {output} defaults to standard output.

    {recipient} can be:
    - An {-age} public key, as generated by {$keygen_name} ({$example_age_pubkey}).
    - An SSH public key ({$example_ssh_pubkey}).

    {recipients-file} is a path to a file containing {-age} recipients, one per line
    (ignoring "#" prefixed comments and empty lines).

    {identity} is a path to a file with {-age} identities, one per line
    (ignoring "#" prefixed comments and empty lines), or to an SSH key file.
    Passphrase-encrypted {-age} identity files can be used as identity files.
    Multiple identities may be provided, and any unused ones will be ignored.

rage-after-help-example =
    Example:
    {"  "}{$example_a}
    {"  "}{tty-pubkey}: {$example_a_output}
    {"  "}{$example_b}
    {"  "}{$example_c}

keygen-help-flag-output = {help-flag-output} Defaults to standard output.
keygen-help-flag-convert = Convert an identity file to a recipients file.

## Formatting

warning-msg = Warning: {$warning}

## Keygen messages

tty-pubkey = Public key
identity-file-created = created
identity-file-pubkey = public key

## Encryption messages

autogenerated-passphrase = Using an autogenerated passphrase:
type-passphrase = Type passphrase
prompt-passphrase = Passphrase

warn-double-encrypting = Encrypting an already-encrypted file

## General errors

err-failed-to-open-input = Failed to open input: {$err}
err-failed-to-open-output = Failed to open output: {$err}
err-failed-to-read-input = Failed to read from input: {$err}
err-failed-to-write-output = Failed to write to output: {$err}
err-identity-ambiguous = {-flag-identity} requires either {-flag-encrypt} or {-flag-decrypt}.
err-mixed-encrypt-decrypt = {-flag-encrypt} can't be used with {-flag-decrypt}.
err-passphrase-timed-out = Timed out waiting for passphrase input.
err-same-input-and-output = Input and output are the same file '{$filename}'.

err-ux-A = Did {-rage} not do what you expected? Could an error be more useful?
err-ux-B = Tell us
# Put (len(A) - len(B) - 32) spaces here.
err-ux-C = {"                          "}

## Keygen errors

err-identity-file-contains-plugin = Identity file '{$filename}' contains identities for '{-age-plugin-}{$plugin_name}'.
rec-identity-file-contains-plugin = Try using '{-age-plugin-}{$plugin_name}' to convert this identity to a recipient.

err-no-identities-in-file = No identities found in file '{$filename}'.
err-no-identities-in-stdin = No identities found in standard input.

## Encryption errors

err-enc-broken-stdout = Could not write to stdout: {$err}
rec-enc-broken-stdout = Are you piping to a program that isn't reading from stdin?

err-enc-broken-file = Could not write to file: {$err}

err-enc-invalid-recipient = Invalid recipient '{$recipient}'.

err-enc-invalid-recipients-file =
    Recipients file '{$filename}' contains non-recipient data on line {$line_number}.

err-enc-missing-recipients = Missing recipients.
rec-enc-missing-recipients = Did you forget to specify {-flag-recipient}?

err-enc-mixed-identity-passphrase = {-flag-identity} can't be used with {-flag-passphrase}.
err-enc-mixed-recipient-passphrase = {-flag-recipient} can't be used with {-flag-passphrase}.
err-enc-mixed-recipients-file-passphrase = {-flag-recipients-file} can't be used with {-flag-passphrase}.
err-enc-passphrase-without-file = File to encrypt must be passed as an argument when using {-flag-passphrase}.

err-enc-plugin-name-flag = {-flag-plugin-name} can't be used with {-flag-encrypt}.

err-enc-rsa-modulus-too-large =
    RSA Modulus Too Large
    ---------------------
    OpenSSH supports various RSA modulus sizes, but {-rage} only supports public
    keys of at most {$max_size} bits, to prevent a Denial of Service (DoS) condition
    when encrypting to untrusted public keys.

## Decryption errors

err-detected-powershell-corruption = It looks like this file was corrupted by PowerShell redirection.
rec-detected-powershell-corruption = Consider using {-flag-output} or {-flag-armor} to encrypt files in PowerShell.

rec-dec-excessive-work = To decrypt, retry with {-flag-max-work-factor} {$wf}

err-dec-armor-flag = {-flag-armor} can't be used with {-flag-decrypt}.
rec-dec-armor-flag = Note that armored files are detected automatically.

err-dec-identity-encrypted-without-passphrase =
    Identity file '{$filename}' is encrypted with {-age} but not with a passphrase.

err-dec-identity-not-found = Identity file not found: {$filename}

err-dec-missing-identities = Missing identities.
rec-dec-missing-identities = Did you forget to specify {-flag-identity}?

err-dec-mixed-identity-passphrase = {-flag-identity} can't be used with passphrase-encrypted files.

err-mixed-identity-and-plugin-name = {-flag-identity} can't be used with {-flag-plugin-name}.

err-dec-passphrase-flag = {-flag-passphrase} can't be used with {-flag-decrypt}.
rec-dec-passphrase-flag = Note that passphrase-encrypted files are detected automatically.

err-dec-passphrase-without-file-win =
    This file requires a passphrase, and on Windows the
    file to decrypt must be passed as a positional argument
    when decrypting with a passphrase.

err-dec-recipient-flag = {-flag-recipient} can't be used with {-flag-decrypt}.
err-dec-recipients-file-flag = {-flag-recipients-file} can't be used with {-flag-decrypt}.
rec-dec-recipient-flag = Did you mean to use {-flag-identity} to specify a private key?

## rage-mount strings

-flag-mnt-types = -t/--types

mnt-filename = FILENAME
mnt-mountpoint = MOUNTPOINT
mnt-types = TYPES

help-arg-mnt-filename = The encrypted filesystem to mount.
help-arg-mnt-mountpoint = The directory to mount the filesystem at.
help-arg-mnt-types = Indicates the filesystem type (one of {$types}).

info-decrypting = Decrypting {$filename}
info-mounting-as-fuse = Mounting as FUSE filesystem

err-mnt-missing-filename = Missing filename.
err-mnt-missing-mountpoint = Missing mountpoint.
err-mnt-missing-types = Missing {-flag-mnt-types}.
err-mnt-unknown-type = Unknown filesystem type "{$fs_type}"

## Unstable features

test-unstable = To test this, build {-rage} with {-flag-unstable}.

## Manpages

man-rage-about = A simple, secure, and modern encryption tool

man-rage-example-enc-single = Encryption to a recipient
man-rage-example-enc-multiple = Encryption to multiple recipients (with default output to stdout)
man-rage-example-enc-password = Encryption with a password (interactive only, use recipients for batch!)
man-rage-example-enc-list = Encryption to a list of recipients in a file
man-rage-example-enc-identities = Encryption to several identities
man-rage-example-enc-url = Encryption to a list of recipients at an HTTPS URL
man-rage-example-dec-identities = Decryption with identities

man-keygen-about = Generate age-compatible encryption key pairs

man-keygen-example-stdout = Generate a new key pair
man-keygen-example-file = Generate a new key pair and save it to a file
man-keygen-example-convert = Convert an identity file to a recipient

man-mount-about = Mount an age-encrypted filesystem

man-mount-example-identity = Mounting an archive encrypted to a recipient
man-mount-example-passphrase = Mounting an archive encrypted with a passphrase
